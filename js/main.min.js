import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls.js";import{GLTFLoader}from"three/addons/loaders/GLTFLoader.js";let width=window.innerWidth,height=window.innerHeight;const canvas=document.getElementById("canvas");window.addEventListener("resize",(()=>{width=window.innerWidth,height=window.innerHeight,renderer.setSize(width,height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),camera.aspect=width/height,camera.updateProjectionMatrix()})),window.addEventListener("dblclick",(()=>{document.fullscreenElement?document.exitFullscreen():canvas.requestFullscreen()}));const camera=new THREE.PerspectiveCamera(60,width/height,.01,100);camera.position.z=9;const scene=new THREE.Scene({});{const e=8,n=30,t=15790327;scene.fog=new THREE.Fog(t,e,n),scene.background=new THREE.Color(t)}const geometry=new THREE.BoxGeometry(1,1,1),group=new THREE.Group;let i=0;for(let e=-3;e<=3;e+=3)for(let n=-3;n<=3;n+=3){const t=(new THREE.TextureLoader).load(`images/photo-${i+1}.webp`);t.colorSpace=THREE.SRGBColorSpace;const o=new THREE.MeshBasicMaterial({fog:!0,map:t}),a=new THREE.Mesh(geometry,o);a.position.set(e,n,0),a.index=i,a.basePosition=new THREE.Vector3(e,n,0),a.link="https://pavstyuk.ru/",group.add(a),i++}scene.add(group),scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:!0});renderer.setSize(width,height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const controls=new OrbitControls(camera,canvas);controls.enableDamping=!0,controls.listenToKeyEvents(window),controls.keyPanSpeed=30,controls.enableZoom=!1;const stats=new Stats;stats.showPanel(0),document.body.appendChild(stats.dom);const loader=new GLTFLoader;let activeIndex=-1;const clock=new THREE.Clock,animation=()=>{stats.begin();let e=clock.getDelta();group.children.forEach(((n,t)=>{if(n.index!==activeIndex){let i=t%2==0?-1:1;n.rotation.z+=.1*e*i}})),controls.update(),TWEEN.update(),renderer.render(scene,camera),stats.end(),renderer.setAnimationLoop(animation)};animation();const raycaster=new THREE.Raycaster,pointer=new THREE.Vector2,clicking=e=>{pointer.x=e.clientX/window.innerWidth*2-1,pointer.y=-e.clientY/window.innerHeight*2+1,raycaster.setFromCamera(pointer,camera);let n=raycaster.intersectObjects(group.children);if(n[0]){-1!==activeIndex&&resetActive();let e=n[0].object;activeIndex=e.index,new TWEEN.Tween(e.rotation).to({z:0},1e3).easing(TWEEN.Easing.Exponential.InOut).start(),new TWEEN.Tween(e.position).to({x:0,y:0,z:4},1e3).easing(TWEEN.Easing.Exponential.InOut).start(),new TWEEN.Tween(e.scale).to({x:3,y:3,z:3},1e3).easing(TWEEN.Easing.Exponential.InOut).start()}else resetActive()};window.addEventListener("click",clicking);const resetActive=()=>{-1!==activeIndex&&(new TWEEN.Tween(group.children[activeIndex].position).to({x:group.children[activeIndex].basePosition.x,y:group.children[activeIndex].basePosition.y,z:group.children[activeIndex].basePosition.z},1e3).easing(TWEEN.Easing.Exponential.InOut).start(),new TWEEN.Tween(group.children[activeIndex].scale).to({x:1,y:1,z:1},1e3).easing(TWEEN.Easing.Exponential.InOut).start()),activeIndex=-1};